<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Stopwatch App</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f0f0f0;
      text-align: center;
      padding: 50px;
    }

    .stopwatch {
      background: white;
      padding: 2rem;
      border-radius: 10px;
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
      display: inline-block;
    }

    .time {
      font-size: 3rem;
      margin-bottom: 20px;
    }

    .buttons button {
      padding: 10px 20px;
      font-size: 1rem;
      margin: 5px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      transition: 0.3s ease;
    }

    .buttons button:hover {
      opacity: 0.85;
    }

    #startBtn { background: #4caf50; color: white; }
    #pauseBtn { background: #f44336; color: white; }
    #resetBtn { background: #9e9e9e; color: white; }
    #lapBtn   { background: #2196f3; color: white; }

    .laps {
      margin-top: 20px;
      max-height: 200px;
      overflow-y: auto;
      text-align: left;
    }

    .laps ul {
      list-style: none;
      padding: 0;
    }

    .laps li {
      padding: 5px 10px;
      border-bottom: 1px solid #ccc;
    }
  </style>
</head>
<body>

  <div class="stopwatch">
    <div class="time" id="display">00:00:00.000</div>
    <div class="buttons">
      <button id="startBtn">Start</button>
      <button id="pauseBtn">Pause</button>
      <button id="resetBtn">Reset</button>
      <button id="lapBtn">Lap</button>
    </div>
    <div class="laps" id="laps">
      <ul id="lapList"></ul>
    </div>
  </div>

  <script>
    let startTime, updatedTime, difference, timerInterval;
    let running = false;
    let laps = 0;

    const display = document.getElementById('display');
    const lapList = document.getElementById('lapList');

    function formatTime(time) {
      let milliseconds = parseInt((time % 1000), 10);
      let seconds = Math.floor((time / 1000) % 60);
      let minutes = Math.floor((time / (1000 * 60)) % 60);
      let hours = Math.floor((time / (1000 * 60 * 60)) % 24);

      return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(milliseconds).padStart(3, '0')}`;
    }

    function startTimer() {
      if (!running) {
        startTime = new Date().getTime() - (difference || 0);
        timerInterval = setInterval(() => {
          updatedTime = new Date().getTime();
          difference = updatedTime - startTime;
          display.textContent = formatTime(difference);
        }, 10);
        running = true;
      }
    }

    function pauseTimer() {
      if (running) {
        clearInterval(timerInterval);
        running = false;
      }
    }

    function resetTimer() {
      clearInterval(timerInterval);
      running = false;
      difference = 0;
      display.textContent = "00:00:00.000";
      lapList.innerHTML = "";
      laps = 0;
    }

    function recordLap() {
      if (running) {
        const lapTime = formatTime(difference);
        const li = document.createElement('li');
        li.textContent = `Lap ${++laps}: ${lapTime}`;
        lapList.appendChild(li);
      }
    }

    document.getElementById('startBtn').addEventListener('click', startTimer);
    document.getElementById('pauseBtn').addEventListener('click', pauseTimer);
    document.getElementById('resetBtn').addEventListener('click', resetTimer);
    document.getElementById('lapBtn').addEventListener('click', recordLap);
  </script>

</body>
</html>
